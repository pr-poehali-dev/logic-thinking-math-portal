import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import Icon from "@/components/ui/icon";
import { useState } from "react";
import ClassAnalysis from "@/components/ClassAnalysis";
import GradeSixTasks from "@/components/GradeSixTasks";

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–∏
const TaskCard = ({
  task,
  index,
  selectedDifficulty,
}: {
  task: any;
  index: number;
  selectedDifficulty: string | null;
}) => {
  const [showHints, setShowHints] = useState(false);
  const [showSolution, setShowSolution] = useState(false);

  const getDifficultyColor = (level: string) => {
    switch (level) {
      case "easy":
        return "green";
      case "medium":
        return "yellow";
      case "hard":
        return "red";
      default:
        return "gray";
    }
  };

  const getDifficultyLabel = (level: string) => {
    switch (level) {
      case "easy":
        return "–õ—ë–≥–∫–∏–π";
      case "medium":
        return "–°—Ä–µ–¥–Ω–∏–π";
      case "hard":
        return "–°–ª–æ–∂–Ω—ã–π";
      default:
        return "";
    }
  };

  const getDifficultyIcon = (level: string) => {
    switch (level) {
      case "easy":
        return "üü¢";
      case "medium":
        return "üü°";
      case "hard":
        return "üî¥";
      default:
        return "‚ö™";
    }
  };

  return (
    <div className="p-6 bg-white border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow">
      <div className="flex items-start justify-between mb-4">
        <div className="flex items-center gap-3">
          <span className="flex-shrink-0 w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-semibold">
            {index + 1}
          </span>
          <div className="flex items-center gap-2">
            <span className="text-lg">{getDifficultyIcon(task.level)}</span>
            <span
              className={`px-2 py-1 text-xs font-medium rounded-full bg-${getDifficultyColor(task.level)}-100 text-${getDifficultyColor(task.level)}-800`}
            >
              {getDifficultyLabel(task.level)}
            </span>
          </div>
        </div>
      </div>

      <div className="mb-4">
        <p className="text-gray-800 leading-relaxed">{task.condition}</p>
      </div>

      <div className="flex flex-wrap gap-2">
        <Button
          variant="outline"
          size="sm"
          onClick={() => setShowHints(!showHints)}
          className="text-blue-600 hover:text-blue-700"
        >
          <Icon name="Lightbulb" size={14} className="mr-1" />
          {showHints ? "–°–∫—Ä—ã—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏" : "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏"}
        </Button>
        <Button
          variant="outline"
          size="sm"
          onClick={() => setShowSolution(!showSolution)}
          className="text-green-600 hover:text-green-700"
        >
          <Icon name="CheckCircle" size={14} className="mr-1" />
          {showSolution ? "–°–∫—Ä—ã—Ç—å —Ä–µ—à–µ–Ω–∏–µ" : "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"}
        </Button>
      </div>

      {showHints && (
        <div className="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <h4 className="font-semibold text-blue-800 mb-2 flex items-center gap-2">
            <Icon name="Lightbulb" size={16} />
            –ü–æ–¥—Å–∫–∞–∑–∫–∏:
          </h4>
          <ul className="space-y-2">
            {task.hints.map((hint: string, hintIndex: number) => (
              <li key={hintIndex} className="text-blue-700 text-sm">
                ‚Ä¢ {hint}
              </li>
            ))}
          </ul>
        </div>
      )}

      {showSolution && (
        <div className="mt-4 p-4 bg-green-50 border border-green-200 rounded-lg">
          <h4 className="font-semibold text-green-800 mb-2 flex items-center gap-2">
            <Icon name="CheckCircle" size={16} />
            –†–µ—à–µ–Ω–∏–µ:
          </h4>
          <p className="text-green-700 text-sm">
            {task.solution ||
              "–†–µ—à–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–∑–∂–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–µ—à–∏—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ–¥—Å–∫–∞–∑–∫–∏!"}
          </p>
        </div>
      )}
    </div>
  );
};

const TestSection = () => {
  const [selectedTest, setSelectedTest] = useState<string | null>(null);
  const [activeCategory, setActiveCategory] = useState<string | null>(null);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState<string[]>([]);
  const [selectedDifficulty, setSelectedDifficulty] = useState<string | null>(
    null,
  );

  // –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏
  const mathTasks = [
    {
      id: "knights-liars-math",
      title: "–ó–∞–¥–∞—á–∏ –æ —Ä—ã—Ü–∞—Ä—è—Ö –∏ –ª–∂–µ—Ü–∞—Ö (–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ)",
      description:
        "–õ–æ–≥–∏—á–µ—Å–∫–∏–µ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏ —Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è–º–∏ –æ—Ç —Ä—ã—Ü–∞—Ä–µ–π –∏ –ª–∂–µ—Ü–æ–≤",
      icon: "Shield",
      color: "indigo",
      tasks: [
        // –õ—ë–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
        {
          level: "easy",
          condition:
            "–î–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞ –ê –∏ –ë. –û–¥–∏–Ω —Ä—ã—Ü–∞—Ä—å, –¥—Ä—É–≥–æ–π –ª–∂–µ—Ü. –ê –≥–æ–≤–æ—Ä–∏—Ç: '2 + 3 = 5'. –ö—Ç–æ —Ç–∞–∫–æ–π –ê?",
          hints: [
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ê",
            "–†—ã—Ü–∞—Ä–∏ –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä—è—Ç –ø—Ä–∞–≤–¥—É, –ª–∂–µ—Ü—ã –≤—Å–µ–≥–¥–∞ –ª–≥—É—Ç",
          ],
          solution: "–ê - —Ä—ã—Ü–∞—Ä—å, —Ç–∞–∫ –∫–∞–∫ 2 + 3 –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–≤–Ω–æ 5",
        },
        {
          level: "easy",
          condition:
            "–ê –∏ –ë. –û–¥–∏–Ω —Ä—ã—Ü–∞—Ä—å, –¥—Ä—É–≥–æ–π –ª–∂–µ—Ü. –ë –≥–æ–≤–æ—Ä–∏—Ç: '–ê —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ 4 √ó 3 = 12'. –ê –º–æ–ª—á–∏—Ç. –ö—Ç–æ —Ç–∞–∫–æ–π –ë?",
          hints: [
            "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–¥–∞ –ª–∏ —á—Ç–æ 4 √ó 3 = 12",
            "–ï—Å–ª–∏ –ê —Ä—ã—Ü–∞—Ä—å, –º–æ–≥ –±—ã –æ–Ω —Å–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–¥—É? –ï—Å–ª–∏ –ê –ª–∂–µ—Ü, –º–æ–≥ –±—ã –æ–Ω —Å–∫–∞–∑–∞—Ç—å –ª–æ–∂—å?",
          ],
          solution:
            "–ë - —Ä—ã—Ü–∞—Ä—å, —Ç–∞–∫ –∫–∞–∫ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ 4 √ó 3 = 12 –∏—Å—Ç–∏–Ω–Ω–æ, –∏ —Ä—ã—Ü–∞—Ä—å –ê –º–æ–≥ –±—ã –µ–≥–æ –ø—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏",
        },
        {
          level: "easy",
          condition:
            "–î–≤–∞ –∂–∏—Ç–µ–ª—è –ê –∏ –ë. –ê –≥–æ–≤–æ—Ä–∏—Ç: '10 √∑ 2 = 6'. –ë –≥–æ–≤–æ—Ä–∏—Ç: '–ê - –ª–∂–µ—Ü'. –ö—Ç–æ –µ—Å—Ç—å –∫—Ç–æ?",
          hints: [
            "–°–Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ê",
            "–ï—Å–ª–∏ –ê –Ω–µ–ø—Ä–∞–≤, —á—Ç–æ —ç—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ –ë?",
          ],
          solution:
            "–ê - –ª–∂–µ—Ü (10 √∑ 2 = 5, –∞ –Ω–µ 6), –ë - —Ä—ã—Ü–∞—Ä—å (–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–∑—ã–≤–∞–µ—Ç –ê –ª–∂–µ—Ü–æ–º)",
        },
        {
          level: "easy",
          condition: "–ê –≥–æ–≤–æ—Ä–∏—Ç: '–ï—Å–ª–∏ 6 + 4 = 10, —Ç–æ —è —Ä—ã—Ü–∞—Ä—å'. –ö—Ç–æ —Ç–∞–∫–æ–π –ê?",
          hints: [
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å–ª–æ–≤–∏–µ: 6 + 4 = 10?",
            "–ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –≤–µ—Ä–Ω–æ, —Ç–æ —á—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–µ—Ä–Ω–æ –≤ –∑–∞–∫–ª—é—á–µ–Ω–∏–∏?",
          ],
          solution:
            "–ê - —Ä—ã—Ü–∞—Ä—å. –ü–æ—Å–∫–æ–ª—å–∫—É 6 + 4 = 10 –∏—Å—Ç–∏–Ω–Ω–æ, –∏ –ê —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∏—Å—Ç–∏–Ω—É –æ —Å–µ–±–µ",
        },
        {
          level: "easy",
          condition:
            "–ë –≥–æ–≤–æ—Ä–∏—Ç –ê: '–ú—ã –æ–±–∞ —Å–æ–≥–ª–∞—Å–∏–º—Å—è, —á—Ç–æ 7 - 3 = 4'. –ê –∫–∏–≤–∞–µ—Ç. –ö—Ç–æ —Ç–∞–∫–æ–π –ë?",
          hints: [
            "–ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ?",
            "–ú–æ–≥—É—Ç –ª–∏ —Ä—ã—Ü–∞—Ä—å –∏ –ª–∂–µ—Ü –æ–±–∞ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –∏—Å—Ç–∏–Ω–Ω—ã–º —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º?",
          ],
          solution:
            "–ë - –ª–∂–µ—Ü. –†—ã—Ü–∞—Ä—å –∏ –ª–∂–µ—Ü –Ω–µ –º–æ–≥—É—Ç –æ–±–∞ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –æ–¥–Ω–∏–º —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º",
        },

        // –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å
        {
          level: "medium",
          condition:
            "–¢—Ä–∏ —á–µ–ª–æ–≤–µ–∫–∞ –ê, –ë –∏ –í. –û–¥–∏–Ω —Ä—ã—Ü–∞—Ä—å, –æ–¥–∏–Ω –ª–∂–µ—Ü, –æ–¥–∏–Ω –æ–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫. –ê –≥–æ–≤–æ—Ä–∏—Ç: '–ë —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ 15 √∑ 3 = 5, –∏ –æ–Ω —Ä—ã—Ü–∞—Ä—å'. –ö—Ç–æ —Ç–∞–∫–∏–µ –ê, –ë –∏ –í?",
          hints: [
            "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É: 15 √∑ 3 = 5?",
            "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ª—É—á–∞–∏: –µ—Å–ª–∏ –ë —Ä—ã—Ü–∞—Ä—å, –ª–∂–µ—Ü –∏–ª–∏ –æ–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫",
          ],
          solution:
            "–ê - –æ–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –ë - —Ä—ã—Ü–∞—Ä—å (15 √∑ 3 = 5 –≤–µ—Ä–Ω–æ), –í - –ª–∂–µ—Ü",
        },
        {
          level: "medium",
          condition:
            "–ê –∏ –ë. –ê –≥–æ–≤–æ—Ä–∏—Ç: '–ï—Å–ª–∏ 8 √ó 7 = 56, —Ç–æ –ë - –ª–∂–µ—Ü'. –ë –≥–æ–≤–æ—Ä–∏—Ç: '–ê –≥–æ–≤–æ—Ä–∏—Ç –ø—Ä–∞–≤–¥—É'. –ö—Ç–æ –µ—Å—Ç—å –∫—Ç–æ?",
          hints: [
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: 8 √ó 7 = 56?",
            "–ï—Å–ª–∏ –ê –≥–æ–≤–æ—Ä–∏—Ç –ø—Ä–∞–≤–¥—É –æ –ë, –∫–∞–∫ –ë –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–∞–≤–¥—É –æ–± –ê?",
          ],
          solution:
            "–ü—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ! –¢–∞–∫–∞—è —Å–∏—Ç—É–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–∏ –¥–∞–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö",
        },
        {
          level: "medium",
          condition:
            "–ê –≥–æ–≤–æ—Ä–∏—Ç: '20% –æ—Ç 50 —Ä–∞–≤–Ω–æ 10, –∏ –ë —Å–∫–∞–∂–µ—Ç, —á—Ç–æ —è –ª–∂–µ—Ü'. –ë –≥–æ–≤–æ—Ä–∏—Ç: '–ê - —Ä—ã—Ü–∞—Ä—å'. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ç–∏–ø—ã.",
          hints: [
            "–í—ã—á–∏—Å–ª–∏—Ç–µ: 20% –æ—Ç 50 = ?",
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –ê –∏ –ë",
          ],
          solution:
            "–ê - –ª–∂–µ—Ü (20% –æ—Ç 50 = 10 –≤–µ—Ä–Ω–æ, –Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –æ –ë –Ω–µ–≤–µ—Ä–Ω–æ), –ë - –ª–∂–µ—Ü",
        },
        {
          level: "medium",
          condition:
            "–¢—Ä–æ–µ: –ê, –ë, –í. –ê: '‚àö25 = 5'. –ë: '–ê –ø—Ä–∞–≤, –∏ –í —Å–∫–∞–∂–µ—Ç, —á—Ç–æ —è –ª–∂–µ—Ü'. –í: '–ë - —Ä—ã—Ü–∞—Ä—å'. –ö—Ç–æ –µ—Å—Ç—å –∫—Ç–æ?",
          hints: ["‚àö25 = 5 - –≤–µ—Ä–Ω–æ –ª–∏ —ç—Ç–æ?", "–ü—Ä–æ—Å–ª–µ–¥–∏—Ç–µ —Ü–µ–ø–æ—á–∫—É —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π"],
          solution:
            "–ê - —Ä—ã—Ü–∞—Ä—å (‚àö25 = 5), –ë - –ª–∂–µ—Ü (–Ω–µ–≤–µ—Ä–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª –í), –í - –ª–∂–µ—Ü",
        },
        {
          level: "medium",
          condition:
            "–ê: '–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ 6 –∏ 9 —Ä–∞–≤–Ω–æ 54, –∏–ª–∏ –ë - –ª–∂–µ—Ü'. –ë: '–ê –∏ —è –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞'. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ç–∏–ø—ã.",
          hints: ["6 √ó 9 = 54?", "–†–∞–∑–±–µ—Ä–∏—Ç–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ '–∏–ª–∏' –≤ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ê"],
          solution:
            "–ê - —Ä—ã—Ü–∞—Ä—å (6 √ó 9 = 54 –≤–µ—Ä–Ω–æ), –ë - –ª–∂–µ—Ü (–æ–Ω–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ç–∏–ø–∞)",
        },

        // –°–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
        {
          level: "hard",
          condition:
            "–ê, –ë, –í - –æ–¥–∏–Ω —Ä—ã—Ü–∞—Ä—å, –æ–¥–∏–Ω –ª–∂–µ—Ü, –æ–¥–∏–Ω –æ–±—ã—á–Ω—ã–π. –ê: '–ë –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –í —Å–∫–∞–∂–µ—Ç: –ù–û–î(12,8) = 4, –∏ –í - —Ä—ã—Ü–∞—Ä—å'. –ö—Ç–æ –µ—Å—Ç—å –∫—Ç–æ?",
          hints: [
            "–ù–û–î(12,8) = –Ω–∞–∏–±–æ–ª—å—à–∏–π –æ–±—â–∏–π –¥–µ–ª–∏—Ç–µ–ª—å 12 –∏ 8",
            "–ü—Ä–æ—Å–ª–µ–¥–∏—Ç–µ —Å–ª–æ–∂–Ω—É—é —Ü–µ–ø–æ—á–∫—É —Å—Å—ã–ª–æ–∫",
          ],
          solution: "–ù–û–î(12,8) = 4 –≤–µ—Ä–Ω–æ. –ê - –æ–±—ã—á–Ω—ã–π, –ë - —Ä—ã—Ü–∞—Ä—å, –í - –ª–∂–µ—Ü",
        },
        {
          level: "hard",
          condition:
            "–ù–∞ –æ—Å—Ç—Ä–æ–≤–µ –ê –∏ –ë. –ê: '–û–¥–∏–Ω –∏–∑ –Ω–∞—Å —Ä—ã—Ü–∞—Ä—å, –∏ —á–∏—Å–ª–æ 17 –ø—Ä–æ—Å—Ç–æ–µ'. –ë –º–æ–ª—á–∏—Ç. –ö—Ç–æ –µ—Å—Ç—å –∫—Ç–æ?",
          hints: [
            "17 - –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ?",
            "–ú–æ–∂–µ—Ç –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ê –±—ã—Ç—å –ª–æ–∂–Ω—ã–º, –µ—Å–ª–∏ –æ–Ω –ª–∂–µ—Ü?",
          ],
          solution:
            "–ê - —Ä—ã—Ü–∞—Ä—å (17 –ø—Ä–æ—Å—Ç–æ–µ, –∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ), –ë - –ª–∂–µ—Ü",
        },
        {
          level: "hard",
          condition:
            "–ß–µ—Ç–≤–µ—Ä–æ: –ê, –ë, –í, –ì. –ê: '2¬≥ = 8'. –ë: '–ï—Å–ª–∏ –ê –ø—Ä–∞–≤, —Ç–æ –í —Å–∫–∞–∂–µ—Ç –Ω–µ–ø—Ä–∞–≤–¥—É'. –í: '–ì - –ª–∂–µ—Ü'. –ì: '–†–æ–≤–Ω–æ –¥–≤–æ–µ –∏–∑ –Ω–∞—Å —Ä—ã—Ü–∞—Ä–∏'. –ö—Ç–æ –µ—Å—Ç—å –∫—Ç–æ?",
          hints: ["2¬≥ = 8?", "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"],
          solution:
            "–ê - —Ä—ã—Ü–∞—Ä—å, –ë - —Ä—ã—Ü–∞—Ä—å, –í - –ª–∂–µ—Ü, –ì - –ª–∂–µ—Ü (—Ä–æ–≤–Ω–æ 2 —Ä—ã—Ü–∞—Ä—è)",
        },
        {
          level: "hard",
          condition:
            "–ê: '–°—É–º–º–∞ —É–≥–ª–æ–≤ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ 180¬∞, –∏ –µ—Å–ª–∏ –ë –ª–∂–µ—Ü, —Ç–æ –í - —Ä—ã—Ü–∞—Ä—å'. –ë: '–ê –ª–∂–µ—Ç –æ —Å—É–º–º–µ —É–≥–ª–æ–≤'. –í: '–ê –∏ –ë —Ä–∞–∑–Ω–æ–≥–æ —Ç–∏–ø–∞'. –ö—Ç–æ –µ—Å—Ç—å –∫—Ç–æ?",
          hints: [
            "–°—É–º–º–∞ —É–≥–ª–æ–≤ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ 180¬∞?",
            "–†–∞–∑–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ–µ —É—Å–ª–æ–≤–Ω–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ê",
          ],
          solution: "–ê - —Ä—ã—Ü–∞—Ä—å, –ë - –ª–∂–µ—Ü, –í - —Ä—ã—Ü–∞—Ä—å",
        },
        {
          level: "hard",
          condition:
            "–ê: '–ù–û–ö(6,8) = 24, –∏ —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –∏–∑ –ë –∏ –í —Å–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–¥—É –æ —Ç–æ–º, —á—Ç–æ —è —Ä—ã—Ü–∞—Ä—å'. –ë: '–ê - –ª–∂–µ—Ü'. –í: '–ê - —Ä—ã—Ü–∞—Ä—å'. –ö—Ç–æ –µ—Å—Ç—å –∫—Ç–æ?",
          hints: [
            "–ù–û–ö(6,8) = –Ω–∞–∏–º–µ–Ω—å—à–µ–µ –æ–±—â–µ–µ –∫—Ä–∞—Ç–Ω–æ–µ 6 –∏ 8",
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å–ª–æ–≤–∏–µ '—Ä–æ–≤–Ω–æ –æ–¥–∏–Ω —Å–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–¥—É'",
          ],
          solution: "–ù–û–ö(6,8) = 24 –≤–µ—Ä–Ω–æ. –ê - —Ä—ã—Ü–∞—Ä—å, –ë - –ª–∂–µ—Ü, –í - —Ä—ã—Ü–∞—Ä—å",
        },
      ],
    },
    {
      id: "strategy-math",
      title: "–ó–∞–¥–∞—á–∏ –Ω–∞ –≤—ã—Ä–∞–±–æ—Ç–∫—É —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ)",
      description: "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–≥—Ä—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è 6 –∫–ª–∞—Å—Å–∞",
      icon: "Target",
      color: "emerald",
      tasks: [
        // –õ—ë–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
        {
          level: "easy",
          condition:
            "–î–≤–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–∏–±–∞–≤–ª—è—é—Ç –∫ —á–∏—Å–ª—É 0 –ª—é–±–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3. –í—ã–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç–æ—Ç, –∫—Ç–æ –ø–µ—Ä–≤—ã–º –ø–æ–ª—É—á–∏—Ç 15. –ö–∞–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø–æ–±–µ–¥—É?",
          hints: [
            "–ü–æ–¥—É–º–∞–π—Ç–µ –æ —á–∏—Å–ª–∞—Ö, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ–ª—å–∑—è –≤—ã–∏–≥—Ä–∞—Ç—å –∑–∞ –æ–¥–∏–Ω —Ö–æ–¥",
            "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –æ—Å—Ç–∞—Ç–∫–∏ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ 4",
          ],
          solution:
            "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤—Å–µ–≥–¥–∞ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –°—Ç—Ä–∞—Ç–µ–≥–∏—è: –¥–µ–ª–∞—Ç—å —Ö–æ–¥—ã —Ç–∞–∫, —á—Ç–æ–±—ã —Å—É–º–º–∞ –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ –∫—Ä–∞—Ç–Ω–∞ 4 –ø–ª—é—Å 3 (3, 7, 11, 15)",
        },
        {
          level: "easy",
          condition:
            "–ò–≥—Ä–∞: –Ω–∞–∑–≤–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 20. –í—Ç–æ—Ä–æ–π –Ω–∞–∑—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ, –Ω–æ –Ω–µ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 3. –ö—Ç–æ –Ω–∞–∑–æ–≤–µ—Ç 20 - –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –ö—Ç–æ –≤—ã–∏–≥—Ä–∞–µ—Ç?",
          hints: [
            "–†–∞–±–æ—Ç–∞–π—Ç–µ –æ—Ç –∫–æ–Ω—Ü–∞: –∫—Ç–æ –º–æ–∂–µ—Ç –Ω–∞–∑–≤–∞—Ç—å 20?",
            "–ù–∞–π–¥–∏—Ç–µ '–ø–ª–æ—Ö–∏–µ' –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞",
          ],
          solution:
            "–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π –Ω–µ –∑–Ω–∞–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏. –í—ã–∏–≥—Ä—ã—à–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏: 1, 5, 9, 13, 17",
        },
        {
          level: "easy",
          condition:
            "–ù–∞ —Å—Ç–æ–ª–µ 12 –∫–æ–Ω—Ñ–µ—Ç. –î–≤–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –±–µ—Ä—É—Ç 1, 2 –∏–ª–∏ 3 –∫–æ–Ω—Ñ–µ—Ç—ã. –ö—Ç–æ –≤–æ–∑—å–º–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç. –ö—Ç–æ –≤—ã–∏–≥—Ä–∞–µ—Ç?",
          hints: [
            "–ü–æ–¥—É–º–∞–π—Ç–µ –æ –ø–æ–∑–∏—Ü–∏—è—Ö, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –ª—é–±–æ–π —Ö–æ–¥ –≤–µ–¥–µ—Ç –∫ –ø—Ä–æ–∏–≥—Ä—ã—à—É",
            "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –æ—Å—Ç–∞—Ç–∫–∏ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ 4",
          ],
          solution:
            "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –°—Ç—Ä–∞—Ç–µ–≥–∏—è: –æ—Å—Ç–∞–≤–ª—è—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∞—Ç–Ω–æ–µ 4 (8, 4 –∫–æ–Ω—Ñ–µ—Ç—ã)",
        },
        {
          level: "easy",
          condition:
            "–ò–≥—Ä–∞ —Å —á–∏—Å–ª–∞–º–∏: –Ω–∞—á–∏–Ω–∞–µ–º —Å 1. –ö–∞–∂–¥—ã–π —Ö–æ–¥ –º–æ–∂–Ω–æ —É–º–Ω–æ–∂–∏—Ç—å —á–∏—Å–ª–æ –Ω–∞ 2 –∏–ª–∏ –ø—Ä–∏–±–∞–≤–∏—Ç—å 1. –ö—Ç–æ –ø–µ—Ä–≤—ã–π –ø–æ–ª—É—á–∏—Ç 10 - –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –ö—Ç–æ –≤—ã–∏–≥—Ä–∞–µ—Ç?",
          hints: [
            "–ü–æ—Å—Ç—Ä–æ–π—Ç–µ –¥–µ—Ä–µ–≤–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ö–æ–¥–æ–≤ –æ—Ç 1 –¥–æ 10",
            "–ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –ø—É—Ç–∏ –∫ –ø–æ–±–µ–¥–µ",
          ],
          solution:
            "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –ü—É—Ç—å: 1‚Üí2‚Üí4‚Üí8‚Üí9‚Üí10 –∏–ª–∏ 1‚Üí2‚Üí4‚Üí5‚Üí10",
        },
        {
          level: "easy",
          condition:
            "–ù–∞ –¥–æ—Å–∫–µ –Ω–∞–ø–∏—Å–∞–Ω–æ —á–∏—Å–ª–æ 30. –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –≤—ã—á–∏—Ç–∞—é—Ç –ª—é–±–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5. –ö—Ç–æ –ø–æ–ª—É—á–∏—Ç 0 - –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –ö—Ç–æ –≤—ã–∏–≥—Ä–∞–µ—Ç?",
          hints: [
            "–ü–æ–¥—É–º–∞–π—Ç–µ –æ —á–∏—Å–ª–∞—Ö, —Å –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤—ã–∏–≥—Ä–∞—Ç—å",
            "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –æ—Å—Ç–∞—Ç–∫–∏ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ 6",
          ],
          solution:
            "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –°—Ç—Ä–∞—Ç–µ–≥–∏—è: –≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–≤–ª—è—Ç—å —á–∏—Å–ª–æ –∫—Ä–∞—Ç–Ω–æ–µ 6",
        },

        // –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å
        {
          level: "medium",
          condition:
            "20 —Å–ø–∏—á–µ–∫ –≤ —Ä—è–¥. –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –±–µ—Ä—É—Ç 1, 2 –∏–ª–∏ 3 —Å–æ—Å–µ–¥–Ω–∏–µ —Å–ø–∏—á–∫–∏. –ö—Ç–æ –≤–æ–∑—å–º–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ - –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –ö–∞–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è?",
          hints: [
            "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é",
            "–ü–æ–¥—É–º–∞–π—Ç–µ –æ –ø–∞—Ä–Ω—ã—Ö —Ö–æ–¥–∞—Ö",
          ],
          solution:
            "–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç, –∫–æ–ø–∏—Ä—É—è —Ö–æ–¥—ã –ø–µ—Ä–≤–æ–≥–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ü–µ–Ω—Ç—Ä–∞ —Ä—è–¥–∞",
        },
        {
          level: "medium",
          condition:
            "–ù–∞ –¥–æ—Å–∫–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 12. –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –≤—ã—á–µ—Ä–∫–∏–≤–∞—é—Ç –ø–æ –æ–¥–Ω–æ–º—É —á–∏—Å–ª—É. –í—ã–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç–æ—Ç, –ø–æ—Å–ª–µ —á—å–µ–≥–æ —Ö–æ–¥–∞ —Å—É–º–º–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —á–∏—Å–µ–ª –±—É–¥–µ—Ç —á–µ—Ç–Ω–æ–π. –ö—Ç–æ –≤—ã–∏–≥—Ä–∞–µ—Ç?",
          hints: [
            "–°—É–º–º–∞ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 12 —Ä–∞–≤–Ω–∞ 78 (—á–µ—Ç–Ω–∞—è)",
            "–ü—Ä–æ—Å–ª–µ–¥–∏—Ç–µ –∫–∞–∫ –º–µ–Ω—è–µ—Ç—Å—è —á–µ—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏ –≤—ã—á–µ—Ä–∫–∏–≤–∞–Ω–∏–∏",
          ],
          solution: "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç, –≤—ã—á–µ—Ä–∫–∏–≤–∞—è –Ω–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞",
        },
        {
          level: "medium",
          condition:
            "–ò–≥—Ä–∞ —Å –¥—Ä–æ–±—è–º–∏: –Ω–∞ –¥–æ—Å–∫–µ 1/2. –ö–∞–∂–¥—ã–π —Ö–æ–¥ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –¥—Ä–æ–±—å a/b –Ω–∞ a/(b+1) –∏–ª–∏ (a+1)/b. –ö—Ç–æ –ø–µ—Ä–≤—ã–π –ø–æ–ª—É—á–∏—Ç –¥—Ä–æ–±—å –±–æ–ª—å—à–µ 1 - –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –°—Ç—Ä–∞—Ç–µ–≥–∏—è?",
          hints: [
            "–ü—Ä–æ—Å–ª–µ–¥–∏—Ç–µ, –∫–∞–∫ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –¥—Ä–æ–±—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ö–æ–¥–µ",
            "–ü–æ–¥—É–º–∞–π—Ç–µ –æ —Ç–æ–º, –∫–æ–≥–¥–∞ –¥—Ä–æ–±—å —Å—Ç–∞–Ω–µ—Ç –±–æ–ª—å—à–µ 1",
          ],
          solution: "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç: 1/2 ‚Üí 2/2 = 1, –∑–∞—Ç–µ–º ‚Üí 3/2 > 1",
        },
        {
          level: "medium",
          condition:
            "–ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∞—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —á–∏—Å–ª–∞–º–∏ 2, 4, 6, 8, 10, 12. –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –±–µ—Ä—É—Ç –ø–æ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ. –í—ã–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç–æ—Ç, —É –∫–æ–≥–æ –≤ –∏—Ç–æ–≥–µ –±–æ–ª—å—à–µ –æ—á–∫–æ–≤. –ö–∞–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è?",
          hints: ["–°—É–º–º–∞ –≤—Å–µ—Ö —á–∏—Å–µ–ª = 42", "–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å –¥–ª—è –ø–æ–±–µ–¥—ã?"],
          solution:
            "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç, –±–µ—Ä—è –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ: 12, 10, 8 (—Å—É–º–º–∞ 30 > 21)",
        },
        {
          level: "medium",
          condition:
            "–ö—Ä—É–≥–æ–≤–∞—è –∏–≥—Ä–∞: 16 —Ç–æ—á–µ–∫ –ø–æ –∫—Ä—É–≥—É. –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ —Å–æ–µ–¥–∏–Ω—è—é—Ç –ª—é–±—ã–µ –¥–≤–µ —Ç–æ—á–∫–∏ –æ—Ç—Ä–µ–∑–∫–æ–º. –ù–µ–ª—å–∑—è –ø–µ—Ä–µ—Å–µ–∫–∞—Ç—å —É–∂–µ –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç—Ä–µ–∑–∫–∏. –ö—Ç–æ –Ω–µ –º–æ–∂–µ—Ç —Ö–æ–¥–∏—Ç—å - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç. –ö—Ç–æ –≤—ã–∏–≥—Ä–∞–µ—Ç?",
          hints: [
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –Ω–µ–ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏—Ö—Å—è –æ—Ç—Ä–µ–∑–∫–æ–≤ –≤ –∫–æ–ª—å—Ü–µ",
            "–ü–æ–¥—É–º–∞–π—Ç–µ –æ —á–µ—Ç–Ω–æ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ö–æ–¥–æ–≤",
          ],
          solution:
            "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (–º–∞–∫—Å–∏–º—É–º 8 –æ—Ç—Ä–µ–∑–∫–æ–≤ - —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ)",
        },

        // –°–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
        {
          level: "hard",
          condition:
            "–ò–≥—Ä–∞ –ù–∏–º: —Ç—Ä–∏ –∫—É—á–∫–∏ –∫–∞–º–Ω–µ–π (3, 5, 7). –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –±–µ—Ä—É—Ç –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–º–Ω–µ–π –∏–∑ –æ–¥–Ω–æ–π –∫—É—á–∫–∏. –ö—Ç–æ –±–µ—Ä–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–∞–º–µ–Ω—å - –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –°—Ç—Ä–∞—Ç–µ–≥–∏—è?",
          hints: [
            "–í—ã—á–∏—Å–ª–∏—Ç–µ XOR (–∏—Å–∫–ª—é—á–∞—é—â–µ–µ –ò–õ–ò) —Ä–∞–∑–º–µ—Ä–æ–≤ –∫—É—á–µ–∫",
            "3 ‚äï 5 ‚äï 7 = ?",
          ],
          solution:
            "–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç, —Ç–∞–∫ –∫–∞–∫ 3‚äï5‚äï7 = 1 ‚â† 0. –°—Ç—Ä–∞—Ç–µ–≥–∏—è: –¥–µ–ª–∞—Ç—å XOR —Ä–∞–≤–Ω—ã–º 0",
        },
        {
          level: "hard",
          condition:
            "–ù–∞ –¥–æ—Å–∫–µ 4√ó4 –º–æ–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å —Ñ–∏—à–∫–∏. –ù–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å —Ñ–∏—à–∫—É —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –Ω–∞ –æ–¥–Ω–æ–π –ª–∏–Ω–∏–∏ (–ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏, –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –∏–ª–∏ –¥–∏–∞–≥–æ–Ω–∞–ª–∏) —Å —É–∂–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π. –ö—Ç–æ –ø–æ—Å—Ç–∞–≤–∏—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é —Ñ–∏—à–∫—É - –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –ú–∞–∫—Å–∏–º—É–º —Ñ–∏—à–µ–∫?",
          hints: [
            "–≠—Ç–æ –≤–∞—Ä–∏–∞—Ü–∏—è –∑–∞–¥–∞—á–∏ –æ —Ñ–µ—Ä–∑—è—Ö",
            "–°–∫–æ–ª—å–∫–æ —Ñ–µ—Ä–∑–µ–π –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –¥–æ—Å–∫—É 4√ó4?",
          ],
          solution:
            "–ú–∞–∫—Å–∏–º—É–º 2 —Ñ–∏—à–∫–∏. –ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞—Ç—å –Ω–∏—á—å—é, —Å—Ç–∞–≤—è —Ñ–∏—à–∫—É –≤ —Ü–µ–Ω—Ç—Ä",
        },
        {
          level: "hard",
          condition:
            "100 –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω—ã –æ—Ç 1 –¥–æ 100. –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –±–µ—Ä—É—Ç –∫–∞—Ä—Ç–æ—á–∫–∏. –ü–µ—Ä–≤—ã–π –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –ª—é–±—É—é, —Å–ª–µ–¥—É—é—â–∏–π - —Ç–æ–ª—å–∫–æ —Å–æ—Å–µ–¥–Ω—é—é –ø–æ –Ω–æ–º–µ—Ä—É —Å —É–∂–µ –≤–∑—è—Ç—ã–º–∏. –í—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–∞–±—Ä–∞–≤—à–∏–π –±–æ–ª—å—à–µ –æ—á–∫–æ–≤. –°—Ç—Ä–∞—Ç–µ–≥–∏—è?",
          hints: [
            "–ü–æ–¥—É–º–∞–π—Ç–µ –æ –¥–ª–∏–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö",
            "–ö–∞–∫–∏–µ —á–∏—Å–ª–∞ —Å–∞–º—ã–µ —Ü–µ–Ω–Ω—ã–µ?",
          ],
          solution:
            "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –±–µ—Ä–µ—Ç 50 –∏–ª–∏ 51, –∑–∞—Ç–µ–º —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –æ–¥–Ω—É –∏–∑ –ø–æ–ª–æ–≤–∏–Ω 1-50 –∏–ª–∏ 51-100",
        },
        {
          level: "hard",
          condition:
            "–¢—Ä–µ—É–≥–æ–ª—å–Ω–∞—è –¥–æ—Å–∫–∞: 10 —Ä—è–¥–æ–≤ —Ç–æ—á–µ–∫ (1, 2, 3, ..., 10 —Ç–æ—á–µ–∫). –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ —Å–æ–µ–¥–∏–Ω—è—é—Ç –¥–≤–µ —Ç–æ—á–∫–∏. –ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏. –ö—Ç–æ –Ω–µ –º–æ–∂–µ—Ç —Ö–æ–¥–∏—Ç—å - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç. –ê–Ω–∞–ª–∏–∑?",
          hints: [
            "–í—Å–µ–≥–æ —Ç–æ—á–µ–∫: 1+2+...+10 = 55",
            "–ú–∞–∫—Å–∏–º—É–º —Ä–µ–±–µ—Ä –±–µ–∑ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –≤ –≥—Ä–∞—Ñ–µ",
          ],
          solution:
            "–°–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞ —Ç–µ–æ—Ä–∏–∏ –≥—Ä–∞—Ñ–æ–≤. –ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –∏–º–µ–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –ø—Ä–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –∏–≥—Ä–µ",
        },
        {
          level: "hard",
          condition:
            "–ò–≥—Ä–∞ —Å –ø—Ä–æ—Å—Ç—ã–º–∏ —á–∏—Å–ª–∞–º–∏: –Ω–∞ –¥–æ—Å–∫–µ —á–∏—Å–ª–∞ –æ—Ç 2 –¥–æ 30. –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –≤—ã—á–µ—Ä–∫–∏–≤–∞—é—Ç –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ –∏ –≤—Å–µ –µ–≥–æ –∫—Ä–∞—Ç–Ω—ã–µ. –ö—Ç–æ –Ω–µ –º–æ–∂–µ—Ç —Ö–æ–¥–∏—Ç—å - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç. –°—Ç—Ä–∞—Ç–µ–≥–∏—è?",
          hints: [
            "–ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –æ—Ç 2 –¥–æ 30: 2, 3, 5, 7, 11, 13, 17, 19, 23, 29",
            "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Å—Ç—ã–µ –º–æ–≥—É—Ç –≤—ã—á–µ—Ä–∫–Ω—É—Ç—å –±–æ–ª—å—à–µ —á–∏—Å–µ–ª",
          ],
          solution:
            "–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç, –Ω–∞—á–∏–Ω–∞—è —Å 2 (–≤—ã—á–µ—Ä–∫–∏–≤–∞–µ—Ç –≤—Å–µ —á–µ—Ç–Ω—ã–µ). –°—Ç—Ä–∞—Ç–µ–≥–∏—è: –±—Ä–∞—Ç—å –ø—Ä–æ—Å—Ç—ã–µ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫—Ä–∞—Ç–Ω—ã—Ö",
        },
      ],
    },
  ];

  const tests = [
    {
      id: "logic",
      title: "–¢–µ—Å—Ç –Ω–∞ –ª–æ–≥–∏–∫—É –º—ã—à–ª–µ–Ω–∏—è",
      description:
        "–ù–∞–π–¥–∏—Ç–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ –≤ —á–∏—Å–ª–æ–≤—ã—Ö –∏ —Å–∏–º–≤–æ–ª—å–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö",
      questions: 10,
      time: "15 –º–∏–Ω—É—Ç",
      icon: "Brain",
      color: "blue",
    },
    {
      id: "attention",
      title: "–¢–µ—Å—Ç –Ω–∞ –≤–Ω–∏–º–∞–Ω–∏–µ",
      description: "–°—Ä–∞–≤–Ω–∏—Ç–µ –ø–æ–Ω—è—Ç–∏—è –∏ –Ω–∞–π–¥–∏—Ç–µ —Å—Ö–æ–¥—Å—Ç–≤–∞ –∏ —Ä–∞–∑–ª–∏—á–∏—è",
      questions: 5,
      time: "10 –º–∏–Ω—É—Ç",
      icon: "Eye",
      color: "green",
    },
    {
      id: "memory",
      title: "–¢–µ—Å—Ç –Ω–∞ –ø–∞–º—è—Ç—å",
      description: "–ó–∞–ø–æ–º–Ω–∏—Ç–µ –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      questions: 8,
      time: "12 –º–∏–Ω—É—Ç",
      icon: "Lightbulb",
      color: "purple",
    },
  ];

  const logicQuestions = [
    {
      question: "–£—Å—Ç–∞–Ω–æ–≤–∏ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏ —Ä—è–¥: 2, 5, 8, 11, ___, ___",
      type: "input",
      answer: ["14", "17"],
    },
    {
      question: "–ü—Ä–æ–¥–æ–ª–∂–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 10, 8, 6, 4, ___, ___",
      type: "input",
      answer: ["2", "0"],
    },
    {
      question: "–ù–∞–π–¥–∏ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å: ‚óã, ‚ñ≥, ‚ñ°, ‚óã, ‚ñ≥, ___, ___",
      type: "input",
      answer: ["‚ñ°", "‚óã"],
    },
    {
      question: "–ü—Ä–æ–¥–æ–ª–∂–∏ —Ä—è–¥: 1, 4, 9, 16, ___, ___",
      type: "input",
      answer: ["25", "36"],
    },
    {
      question: "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—É–∫–≤: –ê, –í, –°, –î, ___, ___",
      type: "input",
      answer: ["–ï", "–ñ"],
    },
  ];

  const attentionQuestions = [
    {
      question:
        "–°—Ä–∞–≤–Ω–∏—Ç–µ –ø–æ–Ω—è—Ç–∏—è ¬´–ö–≤–∞–¥—Ä–∞—Ç¬ª –∏ ¬´–†–æ–º–±¬ª. –û–ø–∏—à–∏—Ç–µ —Å—Ö–æ–¥—Å—Ç–≤–∞ –∏ —Ä–∞–∑–ª–∏—á–∏—è:",
      type: "textarea",
      placeholder:
        "–°—Ö–æ–¥—Å—Ç–≤–∞: —á–µ—Ç—ã—Ä–µ—Ö—É–≥–æ–ª—å–Ω–∏–∫–∏, —Ä–∞–≤–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã...\n–†–∞–∑–ª–∏—á–∏—è: —É–≥–ª—ã, –ø–æ–ª–æ–∂–µ–Ω–∏–µ...",
    },
    {
      question: "–ù–∞–π–¥–∏—Ç–µ –æ–±—â–µ–µ –∏ —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É ¬´–ö—Ä—É–≥–æ–º¬ª –∏ ¬´–û–≤–∞–ª–æ–º¬ª:",
      type: "textarea",
      placeholder: "–°—Ö–æ–¥—Å—Ç–≤–∞: –∑–∞–º–∫–Ω—É—Ç—ã–µ —Ñ–∏–≥—É—Ä—ã...\n–†–∞–∑–ª–∏—á–∏—è: —Ñ–æ—Ä–º–∞, —Ä–∞–∑–º–µ—Ä—ã...",
    },
    {
      question: "–°—Ä–∞–≤–Ω–∏—Ç–µ ¬´–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫¬ª –∏ ¬´–ü–∏—Ä–∞–º–∏–¥—É¬ª:",
      type: "textarea",
      placeholder:
        "–°—Ö–æ–¥—Å—Ç–≤–∞: —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∞—è –æ—Å–Ω–æ–≤–∞...\n–†–∞–∑–ª–∏—á–∏—è: –∏–∑–º–µ—Ä–µ–Ω–∏—è, –æ–±—ä–µ–º...",
    },
  ];

  const memoryQuestions = [
    {
      question: "–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 3, 6, 12, 24, ___, ___",
      type: "input",
      answer: ["48", "96"],
    },
    {
      question: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ —Ä—è–¥: 1/2, 1/4, 1/8, 1/16, ___, ___",
      type: "input",
      answer: ["1/32", "1/64"],
    },
    {
      question: "–ß–∏—Å–ª–æ–≤–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 1, 1, 2, 3, 5, ___, ___",
      type: "input",
      answer: ["8", "13"],
    },
  ];

  const getQuestions = (testId: string) => {
    switch (testId) {
      case "logic":
        return logicQuestions;
      case "attention":
        return attentionQuestions;
      case "memory":
        return memoryQuestions;
      default:
        return [];
    }
  };

  const startTest = (testId: string) => {
    setSelectedTest(testId);
    setCurrentQuestion(0);
    setAnswers([]);
  };

  const handleAnswer = (answer: string) => {
    const newAnswers = [...answers];
    newAnswers[currentQuestion] = answer;
    setAnswers(newAnswers);

    const questions = getQuestions(selectedTest!);
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      alert(`–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –û—Ç–≤–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.`);
      setSelectedTest(null);
    }
  };

  const getDifficultyColor = (level: string) => {
    switch (level) {
      case "easy":
        return "green";
      case "medium":
        return "yellow";
      case "hard":
        return "red";
      default:
        return "gray";
    }
  };

  const getDifficultyLabel = (level: string) => {
    switch (level) {
      case "easy":
        return "–õ—ë–≥–∫–∏–π";
      case "medium":
        return "–°—Ä–µ–¥–Ω–∏–π";
      case "hard":
        return "–°–ª–æ–∂–Ω—ã–π";
      default:
        return "";
    }
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–∏
  const TaskCard = ({
    task,
    index,
    selectedDifficulty,
  }: {
    task: any;
    index: number;
    selectedDifficulty: string | null;
  }) => {
    const [showHints, setShowHints] = useState(false);
    const [showSolution, setShowSolution] = useState(false);
    const [currentHint, setCurrentHint] = useState(0);

    const difficultyColor = getDifficultyColor(task.level);
    const difficultyLabel = getDifficultyLabel(task.level);

    return (
      <Card
        className="border-l-4"
        style={{ borderLeftColor: `var(--color-${difficultyColor}-500)` }}
      >
        <CardHeader>
          <div className="flex items-start justify-between">
            <div className="flex-1">
              <div className="flex items-center gap-2 mb-2">
                <span
                  className={`px-2 py-1 bg-${difficultyColor}-100 text-${difficultyColor}-800 text-xs rounded font-medium`}
                >
                  {difficultyColor === "green"
                    ? "üü¢"
                    : difficultyColor === "yellow"
                      ? "üü°"
                      : "üî¥"}{" "}
                  {difficultyLabel}
                </span>
                <span className="text-sm text-gray-500">
                  –ó–∞–¥–∞—á–∞ #{index + 1}
                </span>
              </div>
              <CardTitle className="text-base">{task.condition}</CardTitle>
            </div>
          </div>
        </CardHeader>
        <CardContent className="space-y-4">
          {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div className="flex flex-wrap gap-2">
            <Button
              variant="outline"
              size="sm"
              onClick={() => {
                setShowHints(!showHints);
                if (!showHints) setCurrentHint(0);
              }}
              className="text-blue-600 border-blue-200 hover:bg-blue-50"
            >
              <Icon name="Lightbulb" size={16} className="mr-1" />
              {showHints ? "–°–∫—Ä—ã—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏" : "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏"}
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={() => setShowSolution(!showSolution)}
              className="text-green-600 border-green-200 hover:bg-green-50"
            >
              <Icon name="CheckCircle" size={16} className="mr-1" />
              {showSolution ? "–°–∫—Ä—ã—Ç—å —Ä–µ—à–µ–Ω–∏–µ" : "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ"}
            </Button>
          </div>

          {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
          {showHints && task.hints && task.hints.length > 0 && (
            <div className="bg-blue-50 p-4 rounded-lg border border-blue-200">
              <div className="flex items-center justify-between mb-2">
                <h4 className="font-medium text-blue-800">üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏:</h4>
                {task.hints.length > 1 && (
                  <div className="flex gap-1">
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={() =>
                        setCurrentHint(Math.max(0, currentHint - 1))
                      }
                      disabled={currentHint === 0}
                    >
                      <Icon name="ChevronLeft" size={16} />
                    </Button>
                    <span className="text-sm text-blue-600 px-2 py-1">
                      {currentHint + 1} –∏–∑ {task.hints.length}
                    </span>
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={() =>
                        setCurrentHint(
                          Math.min(task.hints.length - 1, currentHint + 1),
                        )
                      }
                      disabled={currentHint === task.hints.length - 1}
                    >
                      <Icon name="ChevronRight" size={16} />
                    </Button>
                  </div>
                )}
              </div>
              <p className="text-blue-700">{task.hints[currentHint]}</p>
            </div>
          )}

          {/* –†–µ—à–µ–Ω–∏–µ */}
          {showSolution && (
            <div className="bg-green-50 p-4 rounded-lg border border-green-200">
              <h4 className="font-medium text-green-800 mb-2">‚úÖ –†–µ—à–µ–Ω–∏–µ:</h4>
              <p className="text-green-700">{task.solution}</p>
            </div>
          )}
        </CardContent>
      </Card>
    );
  };

  const renderTest = () => {
    const questions = getQuestions(selectedTest!);
    const question = questions[currentQuestion];
    const test = tests.find((t) => t.id === selectedTest)!;

    return (
      <div className="max-w-4xl mx-auto">
        <Card>
          <CardHeader>
            <div className="flex items-center justify-between">
              <div>
                <CardTitle className="text-xl">{test.title}</CardTitle>
                <CardDescription>
                  –í–æ–ø—Ä–æ—Å {currentQuestion + 1} –∏–∑ {questions.length}
                </CardDescription>
              </div>
              <Button variant="outline" onClick={() => setSelectedTest(null)}>
                <Icon name="X" size={16} />
                –ó–∞–≤–µ—Ä—à–∏—Ç—å
              </Button>
            </div>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="bg-gray-50 p-6 rounded-lg">
              <h3 className="text-lg font-semibold mb-4">
                {question.question}
              </h3>

              {question.type === "input" && (
                <div className="space-y-3">
                  <input
                    type="text"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç"
                    className="w-full p-3 border border-gray-300 rounded-lg"
                    onKeyPress={(e) => {
                      if (e.key === "Enter") {
                        handleAnswer((e.target as HTMLInputElement).value);
                      }
                    }}
                  />
                  <Button
                    onClick={() => {
                      const input = document.querySelector(
                        "input",
                      ) as HTMLInputElement;
                      handleAnswer(input.value);
                    }}
                    className={`bg-${test.color}-600 hover:bg-${test.color}-700`}
                  >
                    –î–∞–ª–µ–µ
                  </Button>
                </div>
              )}

              {question.type === "textarea" && (
                <div className="space-y-3">
                  <textarea
                    placeholder={question.placeholder}
                    rows={6}
                    className="w-full p-3 border border-gray-300 rounded-lg"
                  />
                  <Button
                    onClick={() => {
                      const textarea = document.querySelector(
                        "textarea",
                      ) as HTMLTextAreaElement;
                      handleAnswer(textarea.value);
                    }}
                    className={`bg-${test.color}-600 hover:bg-${test.color}-700`}
                  >
                    –î–∞–ª–µ–µ
                  </Button>
                </div>
              )}
            </div>

            <div className="w-full bg-gray-200 rounded-full h-2">
              <div
                className={`bg-${test.color}-600 h-2 rounded-full transition-all`}
                style={{
                  width: `${((currentQuestion + 1) / questions.length) * 100}%`,
                }}
              />
            </div>
          </CardContent>
        </Card>
      </div>
    );
  };

  return (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-3xl font-bold text-gray-800 mb-2">
          üß† –¢–µ—Å—Ç—ã –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è
        </h2>
        <p className="text-gray-600">
          –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –º—ã—à–ª–µ–Ω–∏—è
        </p>
      </div>

      <Tabs defaultValue="logic-tasks" className="w-full">
        <TabsList className="grid w-full grid-cols-3">
          <TabsTrigger value="logic-tasks" className="flex items-center gap-2">
            <Icon name="Brain" size={18} />
            –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
          </TabsTrigger>
          <TabsTrigger value="grade-six" className="flex items-center gap-2">
            <Icon name="BookOpen" size={18} />
            –ó–∞–¥–∞—á–∏ –¥–ª—è 6-–≥–æ –∫–ª–∞—Å—Å–∞
          </TabsTrigger>
          <TabsTrigger value="analysis" className="flex items-center gap-2">
            <Icon name="BarChart3" size={18} />
            –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–ª–∞—Å—Å–∞
          </TabsTrigger>
        </TabsList>

        <TabsContent value="logic-tasks" className="space-y-6">
          {!selectedTest ? (
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {tests.map((test) => (
                <Card
                  key={test.id}
                  className="cursor-pointer transition-all hover:shadow-lg hover:scale-105"
                  onClick={() => setSelectedTest(test.id)}
                >
                  <CardHeader className="text-center">
                    <div
                      className={`mx-auto w-16 h-16 rounded-full bg-${test.color}-100 flex items-center justify-center mb-4`}
                    >
                      <Icon
                        name={test.icon as any}
                        size={32}
                        className={`text-${test.color}-600`}
                      />
                    </div>
                    <CardTitle className="text-xl">{test.title}</CardTitle>
                    <CardDescription>{test.description}</CardDescription>
                  </CardHeader>
                  <CardContent className="text-center space-y-2">
                    <div className="flex justify-between text-sm text-gray-600">
                      <span>üìù {test.questions} –≤–æ–ø—Ä–æ—Å–æ–≤</span>
                      <span>‚è±Ô∏è {test.time}</span>
                    </div>
                    <Button className="w-full mt-4">–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç</Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          ) : (
            renderTest()
          )}
        </TabsContent>

        <TabsContent value="grade-six" className="space-y-6">
          <GradeSixTasks />
        </TabsContent>

        <TabsContent value="old-math-tasks" className="space-y-6">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {mathTasks.map((task) => (
              <Card
                key={task.id}
                className="cursor-pointer transition-all hover:shadow-lg hover:scale-105"
                onClick={() => {
                  setActiveCategory(task.id);
                  setSelectedDifficulty(null);
                }}
              >
                <CardHeader className="text-center">
                  <div
                    className={`mx-auto w-16 h-16 rounded-full bg-${task.color}-100 flex items-center justify-center mb-4`}
                  >
                    <Icon
                      name={task.icon as any}
                      size={32}
                      className={`text-${task.color}-600`}
                    />
                  </div>
                  <CardTitle className="text-lg">{task.title}</CardTitle>
                  <CardDescription className="text-sm">
                    {task.description}
                  </CardDescription>
                </CardHeader>
                <CardContent className="text-center">
                  <div className="text-sm text-gray-600 mb-4">
                    üìù 15 –∑–∞–¥–∞—á (5 –ø–æ –∫–∞–∂–¥–æ–º—É —É—Ä–æ–≤–Ω—é)
                  </div>
                  <div className="flex gap-1 justify-center mb-4">
                    <span className="px-2 py-1 bg-green-100 text-green-800 text-xs rounded">
                      üü¢ –õ—ë–≥–∫–∏–π
                    </span>
                    <span className="px-2 py-1 bg-yellow-100 text-yellow-800 text-xs rounded">
                      üü° –°—Ä–µ–¥–Ω–∏–π
                    </span>
                    <span className="px-2 py-1 bg-red-100 text-red-800 text-xs rounded">
                      üî¥ –°–ª–æ–∂–Ω—ã–π
                    </span>
                  </div>
                  <Button className="w-full">–û—Ç–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á–∏</Button>
                </CardContent>
              </Card>
            ))}
          </div>

          {activeCategory && (
            <Card className="mt-6">
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle>
                    {mathTasks.find((t) => t.id === activeCategory)?.title}
                  </CardTitle>
                  <Button
                    variant="outline"
                    onClick={() => setActiveCategory(null)}
                  >
                    <Icon name="X" size={16} />
                    –ó–∞–∫—Ä—ã—Ç—å
                  </Button>
                </div>
              </CardHeader>
              <CardContent>
                {/* –§–∏–ª—å—Ç—Ä –ø–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ */}
                <div className="mb-6">
                  <div className="flex flex-wrap gap-2 mb-4">
                    <Button
                      variant={
                        selectedDifficulty === null ? "default" : "outline"
                      }
                      size="sm"
                      onClick={() => setSelectedDifficulty(null)}
                    >
                      –í—Å–µ —É—Ä–æ–≤–Ω–∏
                    </Button>
                    <Button
                      variant={
                        selectedDifficulty === "easy" ? "default" : "outline"
                      }
                      size="sm"
                      onClick={() => setSelectedDifficulty("easy")}
                      className="text-green-600"
                    >
                      üü¢ –õ—ë–≥–∫–∏–π
                    </Button>
                    <Button
                      variant={
                        selectedDifficulty === "medium" ? "default" : "outline"
                      }
                      size="sm"
                      onClick={() => setSelectedDifficulty("medium")}
                      className="text-yellow-600"
                    >
                      üü° –°—Ä–µ–¥–Ω–∏–π
                    </Button>
                    <Button
                      variant={
                        selectedDifficulty === "hard" ? "default" : "outline"
                      }
                      size="sm"
                      onClick={() => setSelectedDifficulty("hard")}
                      className="text-red-600"
                    >
                      üî¥ –°–ª–æ–∂–Ω—ã–π
                    </Button>
                  </div>
                </div>

                <div className="space-y-4">
                  {(() => {
                    const currentTask = mathTasks.find(
                      (t) => t.id === activeCategory,
                    );
                    if (!currentTask) return null;

                    const filteredTasks = currentTask.tasks.filter(
                      (task: any) => {
                        return (
                          selectedDifficulty === null ||
                          task.level === selectedDifficulty
                        );
                      },
                    );

                    return filteredTasks.map((task: any, index: number) => (
                      <TaskCard
                        key={index}
                        task={task}
                        index={index}
                        selectedDifficulty={selectedDifficulty}
                      />
                    ));
                  })()}
                </div>
              </CardContent>
            </Card>
          )}
        </TabsContent>

        <TabsContent value="analysis">
          <ClassAnalysis />
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default TestSection;
